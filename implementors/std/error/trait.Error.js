(function() {var implementors = {};
implementors["forest_cid"] = [{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/error/trait.Error.html\" title=\"trait std::error::Error\">Error</a> for <a class=\"enum\" href=\"forest_cid/enum.Error.html\" title=\"enum forest_cid::Error\">Error</a>","synthetic":false,"types":["forest_cid::error::Error"]}];
implementors["forest_ipld"] = [{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/error/trait.Error.html\" title=\"trait std::error::Error\">Error</a> for <a class=\"enum\" href=\"forest_ipld/enum.Error.html\" title=\"enum forest_ipld::Error\">Error</a>","synthetic":false,"types":["forest_ipld::error::Error"]}];
implementors["forest_libp2p"] = [{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/error/trait.Error.html\" title=\"trait std::error::Error\">Error</a> for <a class=\"enum\" href=\"forest_libp2p/rpc/enum.RPCError.html\" title=\"enum forest_libp2p::rpc::RPCError\">RPCError</a>","synthetic":false,"types":["forest_libp2p::rpc::error::RPCError"]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()